name: Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened ]

env:
  NODE_VERSION: '18'

jobs:
  # Quick validation for PRs
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check commit messages
        run: |
          # Check if commit messages follow conventional commits
          echo "Checking commit message format..."
          git log --oneline origin/${{ github.base_ref }}..${{ github.sha }} | while read line; do
            if ! echo "$line" | grep -qE "^[a-f0-9]+ (feat|fix|docs|style|refactor|test|chore)(\(.+\))?: .+"; then
              echo "‚ùå Invalid commit message format: $line"
              echo "Please use conventional commit format: type(scope): description"
              exit 1
            fi
          done

      - name: Check for breaking changes
        run: |
          # Check if package.json version was updated for breaking changes
          if git diff --name-only origin/${{ github.base_ref }}..${{ github.sha }} | grep -q "package.json"; then
            echo "üì¶ package.json was modified"
            # Add logic to check for breaking changes
          fi

      - name: TypeScript check
        run: npm run check

      - name: Build check
        run: npm run build

      - name: Check bundle size
        run: |
          # Check if bundle size increased significantly
          echo "Checking bundle size..."
          if [ -d "dist" ]; then
            du -sh dist/
          fi

  # Security and dependency checks
  security-check:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: |
          npm audit --audit-level=moderate
          if [ $? -ne 0 ]; then
            echo "‚ùå Security vulnerabilities found!"
            echo "Please run 'npm audit fix' to resolve issues"
            exit 1
          fi

      - name: Check for sensitive files
        run: |
          # Check for accidentally committed sensitive files
          if find . -name "*.env" -not -path "./node_modules/*" -not -name "*.env.example" | grep -q .; then
            echo "‚ùå Environment files found in commit!"
            find . -name "*.env" -not -path "./node_modules/*" -not -name "*.env.example"
            exit 1
          fi
          
          if find . -name "*.key" -o -name "*.pem" -o -name "*.p12" | grep -q .; then
            echo "‚ùå Key files found in commit!"
            find . -name "*.key" -o -name "*.pem" -o -name "*.p12"
            exit 1
          fi

  # Documentation check
  docs-check:
    name: Documentation Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check documentation updates
        run: |
          # Check if code changes require documentation updates
          if git diff --name-only origin/${{ github.base_ref }}..${{ github.sha }} | grep -E "\.(ts|tsx|js|jsx)$" | grep -v test; then
            echo "üìù Code changes detected"
            
            # Check if API routes were modified
            if git diff --name-only origin/${{ github.base_ref }}..${{ github.sha }} | grep -q "server/routes.ts"; then
              echo "‚ö†Ô∏è  API routes were modified. Please ensure API_DOCUMENTATION.html is updated if needed."
            fi
            
            # Check if new components were added
            if git diff --name-only origin/${{ github.base_ref }}..${{ github.sha }} | grep -q "client/src/components/"; then
              echo "‚ö†Ô∏è  Components were modified. Consider updating documentation if new features were added."
            fi
          fi

      - name: Validate HTML documentation
        run: |
          # Basic validation of HTML files
          for file in *.html; do
            if [ -f "$file" ]; then
              echo "Checking $file..."
              # Basic HTML validation (check for unclosed tags, etc.)
              if ! grep -q "</html>" "$file"; then
                echo "‚ùå $file appears to be incomplete (missing closing </html> tag)"
                exit 1
              fi
            fi
          done

  # Performance check
  performance-check:
    name: Performance Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Analyze bundle size
        run: |
          echo "üìä Bundle Analysis"
          if [ -d "client/dist" ]; then
            echo "Client bundle size:"
            du -sh client/dist/
            find client/dist -name "*.js" -exec ls -lh {} \; | head -10
          fi
          
          if [ -d "dist" ]; then
            echo "Server bundle size:"
            du -sh dist/
          fi

      - name: Check for large files
        run: |
          # Check for accidentally committed large files
          large_files=$(find . -type f -size +1M -not -path "./node_modules/*" -not -path "./.git/*")
          if [ -n "$large_files" ]; then
            echo "‚ö†Ô∏è  Large files detected:"
            echo "$large_files"
            echo "Consider using Git LFS for large files or ensure they should be committed"
          fi

  # Summary comment on PR
  pr-summary:
    name: PR Summary
    runs-on: ubuntu-latest
    needs: [pr-validation, security-check, docs-check, performance-check]
    if: always()
    
    steps:
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha
            });
            
            const conclusion = checks.check_runs.every(check => 
              check.conclusion === 'success' || check.conclusion === 'neutral'
            ) ? '‚úÖ All checks passed!' : '‚ùå Some checks failed';
            
            const body = `## PR Check Summary
            
            ${conclusion}
            
            ### Validation Results:
            - **Code Quality**: ${{ needs.pr-validation.result }}
            - **Security**: ${{ needs.security-check.result }}
            - **Documentation**: ${{ needs.docs-check.result }}
            - **Performance**: ${{ needs.performance-check.result }}
            
            Please ensure all checks pass before merging.
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
